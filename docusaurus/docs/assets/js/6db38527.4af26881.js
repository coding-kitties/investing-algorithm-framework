"use strict";(self.webpackChunkinvesting_algorithm_framework_docs=self.webpackChunkinvesting_algorithm_framework_docs||[]).push([[6262],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),d=r,m=s["".concat(p,".").concat(d)]||s[d]||f[d]||a;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4739:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={id:"portfolio-configuration",title:"Configure your portfolio and market credentials",sidebar_label:"Portfolio Configuration"},i="Portfolio configuration",l={unversionedId:"Getting Started/portfolio-configuration",id:"Getting Started/portfolio-configuration",title:"Configure your portfolio and market credentials",description:"In this section we will explain how to configure your portfolio from your broker or exchange.",source:"@site/docs/Getting Started/portfolio-configuration.md",sourceDirName:"Getting Started",slug:"/Getting Started/portfolio-configuration",permalink:"/investing-algorithm-framework/Getting Started/portfolio-configuration",draft:!1,tags:[],version:"current",frontMatter:{id:"portfolio-configuration",title:"Configure your portfolio and market credentials",sidebar_label:"Portfolio Configuration"},sidebar:"defaultSideBar",previous:{title:"application setup",permalink:"/investing-algorithm-framework/Getting Started/application-setup"},next:{title:"Strategies",permalink:"/investing-algorithm-framework/Getting Started/strategies"}},p={},c=[{value:"\u2705 Simplified Registration (Recommended)",id:"-simplified-registration-recommended",level:2},{value:"Basic Configuration with <code>PortfolioConfiguration</code>",id:"basic-configuration-with-portfolioconfiguration",level:2},{value:"Market Credentials",id:"market-credentials",level:2},{value:"Environment Variable Support",id:"environment-variable-support",level:2},{value:"Initial Balance (Max Portfolio Size)",id:"initial-balance-max-portfolio-size",level:2}],u={toc:c},s="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"portfolio-configuration"},"Portfolio configuration"),(0,r.kt)("p",null,"In this section we will explain how to configure your portfolio from your broker or exchange."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The framework has by default support for ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ccxt/ccxt"},"CCXT"),".\nCCXT is a library that provides a unified API to interact with multiple brokers and exchanges.\nPlease have a look at the ccxt documentation to see which brokers and exchanges are supported.")),(0,r.kt)("h2",{id:"-simplified-registration-recommended"},"\u2705 Simplified Registration (Recommended)"),(0,r.kt)("p",null,"You can use the following syntax to register a portfolio and credentials (from environment variables) in one step:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'app.add_market(\n    market="BITVAVO",\n    trading_symbol="EUR",\n    initial_balance=100  # Optional\n)\n')),(0,r.kt)("p",null,"This is the recommended way to register a portfolio. It automatically reads credentials from the .env file using the expected naming convention."),(0,r.kt)("h2",{id:"basic-configuration-with-portfolioconfiguration"},"Basic Configuration with ",(0,r.kt)("inlineCode",{parentName:"h2"},"PortfolioConfiguration")),(0,r.kt)("p",null,"To configure a portfolio, you need to register a ",(0,r.kt)("inlineCode",{parentName:"p"},"PortfolioConfiguration")," object with the app:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import PortfolioConfiguration, create_app\n\napp = create_app()\napp.add_portfolio_configuration(\n    PortfolioConfiguration(\n        market="BITVAVO",\n        trading_symbol="EUR"\n    )\n)\n')),(0,r.kt)("h2",{id:"market-credentials"},"Market Credentials"),(0,r.kt)("p",null,"To connect to your broker or exchange, you'll need to provide API credentials.\nThis is done by registering a MarketCredentials object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import MarketCredentials\n\napp.add_market_credentials(\n    MarketCredentials(\n        market="BITVAVO",\n        api_key="<your_api_key>",\n        api_secret="<your_api_secret>"\n    )\n)\n')),(0,r.kt)("h2",{id:"environment-variable-support"},"Environment Variable Support"),(0,r.kt)("p",null,"You can also load credentials from a .env file. The framework will\nautomatically detect them using this naming convention:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"<MARKET_IDENTIFIER>_API_KEY\n<MARKET_IDENTIFIER>_SECRET_KEY\n")),(0,r.kt)("p",null,"For example, for the BITVAVO exchange, you would set:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"BITVAVO_API_KEY=<your_api_key>\nBITVAVO_SECRET_KEY=<your_api_secret>\n")),(0,r.kt)("p",null,"Then, you can register the portfolio configuration without explicitly passing the credentials:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import PortfolioConfiguration, MarketCredentials, create_app\nfrom dotenv import load_dotenv\n\nload_dotenv()\napp = create_app()\n\napp.add_portfolio_configuration(\n    PortfolioConfiguration(\n        market="BITVAVO",\n        trading_symbol="EUR"\n    )\n)\napp.add_market_credential(\n    MarketCredentials(market="BITVAVO")\n)\n')),(0,r.kt)("h2",{id:"initial-balance-max-portfolio-size"},"Initial Balance (Max Portfolio Size)"),(0,r.kt)("p",null,"You can optionally define the maximum unallocated size of your portfolio using the initial_balance parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import PortfolioConfiguration, create_app\n\napp = create_app()\napp.add_portfolio_configuration(\n    PortfolioConfiguration(\n        market="BITVAVO",\n        trading_symbol="EUR",\n        initial_balance=1000  # Unallocated EUR to be managed by the bot\n    )\n)\n')),(0,r.kt)("p",null,"or with the simplified registration (recommended):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'app.add_market(\n    market="BITVAVO",\n    trading_symbol="EUR",\n    initial_balance=1000  # Unallocated EUR to be managed by the bot\n)\n')),(0,r.kt)("p",null,"This prevents the bot from using your entire exchange balance."))}f.isMDXComponent=!0}}]);