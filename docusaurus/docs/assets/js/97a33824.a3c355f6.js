"use strict";(self.webpackChunkinvesting_algorithm_framework_docs=self.webpackChunkinvesting_algorithm_framework_docs||[]).push([[8160],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return r?a.createElement(f,i(i({ref:t},u),{},{components:r})):a.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2434:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2},i="Multiple data sources",c={unversionedId:"Data/multiple-market-data-sources",id:"Data/multiple-market-data-sources",title:"Multiple data sources",description:"The framework allows you to configure multiple data sources for your trading strategies.",source:"@site/docs/Data/multiple-market-data-sources.md",sourceDirName:"Data",slug:"/Data/multiple-market-data-sources",permalink:"/investing-algorithm-framework/Data/multiple-market-data-sources",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSideBar",previous:{title:"Market data sources",permalink:"/investing-algorithm-framework/Data/market-data-sources"},next:{title:"Contributing",permalink:"/investing-algorithm-framework/Contributing Guide/contributing"}},s={},l=[],u={toc:l},d="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"multiple-data-sources"},"Multiple data sources"),(0,n.kt)("p",null,"The framework allows you to configure multiple data sources for your trading strategies.\nYou can use this to combine different data sources. This allowes you to easily use different exchanges\nor brokers in your trading strategy."),(0,n.kt)("p",null,"A quick example of how to use multiple data sources in your trading strategy:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'# A ticker market data source for the BTC/EUR symbol on the bitvavo exchange\nbitvavo_ticker_btc_eur = CCXTTickerMarketDataSource(\n    identifier="BTC-ticker",\n    market="BITVAVO",\n    symbol="BTC/EUR",\n)\n\n# A ohlcv market data source for the BTC/EUR symbol on the BITVAVO exchange\nbitvavo_btc_eur_ohlcv_2h = CCXTOHLCVMarketDataSource(\n    identifier="BTC-ohlcv",\n    market="BITVAVO",\n    symbol="BTC/EUR",\n    timeframe="2h",\n    start_date_func=lambda : datetime.utcnow() - timedelta(days=17)\n)\n\nclass MyTradingStrategy(TradingStrategy):\n    time_unit = TimeUnit.SECOND  \n    interval = 5  \n    market_data_sources = ["BTC-ticker", "BTC-ohlcv"] # Registering the market data sources by using their identifiers\n\n    def apply_strategy(self, algorithm: Algorithm, data):\n        ticker_data = data["BTC-ticker"] # Accessing the ticker data object directly by using the identifier\n        ohlcv_data = data["BTC-ohlcv"] # Accessing the ohlcv data object directly by using the identifier\n        \n# Make sure to register your market data sources with the app\napp.add_trading_strategy(MyTradingStrategy)\napp.add_market_data_source(bitvavo_ticker_btc_eur)\napp.add_market_data_source(bitvavo_btc_eur_ohlcv_2h)\n')))}p.isMDXComponent=!0}}]);