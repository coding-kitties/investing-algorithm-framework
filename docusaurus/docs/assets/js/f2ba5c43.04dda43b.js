"use strict";(self.webpackChunkinvesting_algorithm_framework_docs=self.webpackChunkinvesting_algorithm_framework_docs||[]).push([[1229],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(a),k=r,c=m["".concat(d,".").concat(k)]||m[k]||u[k]||l;return a?n.createElement(c,i(i({ref:t},p),{},{components:a})):n.createElement(c,i({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},8751:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const l={id:"download",title:"Download Market Data",sidebar_label:"Download Market Data"},i=void 0,o={unversionedId:"Data/download",id:"Data/download",title:"Download Market Data",description:"Overview",source:"@site/docs/Data/download.md",sourceDirName:"Data",slug:"/Data/download",permalink:"/investing-algorithm-framework/Data/download",draft:!1,tags:[],version:"current",frontMatter:{id:"download",title:"Download Market Data",sidebar_label:"Download Market Data"},sidebar:"defaultSideBar",previous:{title:"Deployment",permalink:"/investing-algorithm-framework/Getting Started/deployment"},next:{title:"Market data sources",permalink:"/investing-algorithm-framework/Data/market-data-sources"}},d={},s=[{value:"Overview",id:"overview",level:2},{value:"Function Signature",id:"function-signature",level:2},{value:"Returns",id:"returns",level:2},{value:"How It Works with storage_path",id:"how-it-works-with-storage_path",level:2},{value:"Why It&#39;s Useful?",id:"why-its-useful",level:2},{value:"Example Use Cases",id:"example-use-cases",level:2},{value:"\ud83e\udde0 Preparing Data for Machine Learning",id:"-preparing-data-for-machine-learning",level:2},{value:"\ud83d\udcbe Saving Data for Offline Analysis",id:"-saving-data-for-offline-analysis",level:2}],p={toc:s},m="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"download")," function is a utility provided by the ",(0,r.kt)("strong",{parentName:"p"},"Investing Algorithm Framework")," that allows you to retrieve historical market data for specific symbols (assets), including OHLCV data (Open, High, Low, Close, Volume), ticker data, and more. This function is particularly useful for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Backtesting trading strategies"),(0,r.kt)("li",{parentName:"ul"},"Performing exploratory data analysis"),(0,r.kt)("li",{parentName:"ul"},"Preprocessing input data for machine learning models")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"function-signature"},"Function Signature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def download(\n    symbol: str,\n    market=None,\n    date=None,\n    time_frame: str = None,\n    data_type: str = "ohlcv",\n    start_date: str = None,\n    end_date: str = None,\n    window_size: int = 200,\n    pandas: bool = True,\n    save: bool = True,\n    storage_path: str = None,\n) -> Union[pandas.DataFrame, polars.DataFrame]\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"symbol")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"The symbol (e.g., ",(0,r.kt)("inlineCode",{parentName:"td"},'"BTC/USDT"'),") for which data is downloaded.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"market")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"(Optional) The market to download data from (e.g., ",(0,r.kt)("inlineCode",{parentName:"td"},'"binance"'),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"(Optional) Specific date to retrieve data for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"time_frame")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"The time frame for data (e.g., ",(0,r.kt)("inlineCode",{parentName:"td"},'"1d"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'"1h"'),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"data_type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"Type of data to retrieve: ",(0,r.kt)("inlineCode",{parentName:"td"},'"ohlcv"')," (default) or ",(0,r.kt)("inlineCode",{parentName:"td"},'"ticker"'),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"start_date")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"(Optional) Start of the date range to retrieve data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"end_date")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"(Optional) End of the date range.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"window_size")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"Number of records to retrieve (default: 200).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pandas")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"True"),", returns a ",(0,r.kt)("inlineCode",{parentName:"td"},"pandas.DataFrame"),"; otherwise returns a ",(0,r.kt)("inlineCode",{parentName:"td"},"polars.DataFrame"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"save")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"True"),", saves the downloaded data to disk.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"storage_path")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"(Optional) Path to store the data when save=True. Also used to load from disk if data already exists.")))),(0,r.kt)("h2",{id:"returns"},"Returns"),(0,r.kt)("p",null,"The function returns a DataFrame (pandas or polars) containing the requested market data, ready for analysis, visualization, or model training."),(0,r.kt)("h2",{id:"how-it-works-with-storage_path"},"How It Works with storage_path"),(0,r.kt)("p",null,"When a storage_path is provided, the function first checks if the requested data already exists at the specified path. If the file is found and readable, the function loads it directly from disk, avoiding unnecessary network calls. If not, it downloads the data and saves it to the path (if save=True)."),(0,r.kt)("p",null,"This makes repeated experiments much faster and reduces API usage and rate-limiting issues."),(0,r.kt)("h2",{id:"why-its-useful"},"Why It's Useful?"),(0,r.kt)("p",null,"This function streamlines the process of acquiring market data by:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Automatically selecting the correct data provider "),(0,r.kt)("li",{parentName:"ul"},"Supporting multiple formats (pandas or polars)"),(0,r.kt)("li",{parentName:"ul"},"Handling flexible input dates and ranges "),(0,r.kt)("li",{parentName:"ul"},"Offering a simple way to persist downloaded data to disk")),(0,r.kt)("h2",{id:"example-use-cases"},"Example Use Cases"),(0,r.kt)("p",null,"\ud83d\udcc8 Backtesting a Strategy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df = download("BTC/USDT", market="binance", time_frame="1d", start_date="2021-01-01", end_date="2022-01-01")\n')),(0,r.kt)("p",null,"Use the returned df to simulate your strategy\u2019s performance over historical data."),(0,r.kt)("h2",{id:"-preparing-data-for-machine-learning"},"\ud83e\udde0 Preparing Data for Machine Learning"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'df = download("ETH/USDT", market="binance", time_frame="1h", window_size=500, pandas=True)\nfeatures = df[["close", "volume"]]\n')),(0,r.kt)("p",null,"This enables quick preparation of time-series datasets for supervised learning tasks."),(0,r.kt)("h2",{id:"-saving-data-for-offline-analysis"},"\ud83d\udcbe Saving Data for Offline Analysis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'download("SOL/USDT", market="binance", time_frame="1d", save=True, storage_path="./data/")\n')))}u.isMDXComponent=!0}}]);